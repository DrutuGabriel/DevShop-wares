{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentuser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentuser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentuser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure\n} from './user.actions';\n\nimport {\n  auth, \n  googleProvider, \n  createUserProfileDocument,\n  getCurrentuser\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\n  try {\n    const userRef =  yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n\n  } catch(error){\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle(){\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    yield getSnapshotFromUserAuth(user);\n  } catch(error){\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({payload: {email, password}}){\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(\n      email, password\n    );    \n    \n    yield getSnapshotFromUserAuth(user);\n  } catch (error){\n    yield put(signInFailure(error));\n  }\n}\n\n\nexport function* onGoogleSignInStart(){\n  yield takeLatest(\n    UserActionTypes.GOOGLE_SIGN_IN_START, \n    signInWithGoogle\n  );\n};\n\nexport function* onEmailSignInStart(){\n  yield takeLatest(\n    UserActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail\n  );\n}\n\nexport function* isUserAuthenticated(){\n  try {\n    const userAuth = yield getCurrentuser();\n    if(!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put (signInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession(){\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated); \n}\n\n\n\nexport function* signOut(){\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error){\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart(){\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\n\nexport function* signUp({\n  payload: {email, password, displayName}}\n){\n\n  try {\n    const {user} = yield auth.createUserWithEmailAndPassword(\n      email, \n      password\n    );\n\n    yield put(signUpSuccess({user, additionalData: {displayName}}));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({payload: {user, additionalData}}){\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onSignUpSuccess(){\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* onSignUpStart(){\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\n\nexport function* userSagas(){\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}