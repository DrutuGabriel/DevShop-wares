{"ast":null,"code":"var _jsxFileName = \"/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; // import {auth, createUserProfileDocument} from '../../firebase/firebase.utils';\n\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert('Passwords don\\'t match');\n        return;\n      }\n\n      const {\n        signUpStart\n      } = this.props;\n      signUpStart(displayName, email, password); //     try {\n      //       const {user} = await auth.createUserWithEmailAndPassword(\n      //         email, \n      //         password\n      //       );\n      //       await createUserProfileDocument(user, {displayName});\n      //       this.setState({\n      //         displayName: '',\n      //         email: '',\n      //         password: '',\n      //         confirmPassword: ''\n      //       });\n      //     } catch (error) {\n      //       console.error(error);\n      //     }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","connect","signUpStart","SignUpContainer","SignUpTitle","SignUp","Component","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","props","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n// import {auth, createUserProfileDocument} from '../../firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {signUpStart} from '../../redux/user/user.actions';\n\nimport {\n  SignUpContainer,\n  SignUpTitle\n} from './sign-up.styles';\n\nclass SignUp extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const {\n      displayName, \n      email, \n      password, \n      confirmPassword\n    } = this.state;\n\n    if(password !== confirmPassword){\n      alert('Passwords don\\'t match');\n      return;\n    }\n\n    const {signUpStart} = this.props;\n\n    signUpStart(displayName, email, password);\n      \n\n  //     try {\n  //       const {user} = await auth.createUserWithEmailAndPassword(\n  //         email, \n  //         password\n  //       );\n\n  //       await createUserProfileDocument(user, {displayName});\n\n  //       this.setState({\n  //         displayName: '',\n  //         email: '',\n  //         password: '',\n  //         confirmPassword: ''\n  //       });\n\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  }\n\n  handleChange = event => {\n      const {name, value} = event.target;\n\n      this.setState({\n        [name] : value\n      });\n  }\n\n  render() { \n    const {\n      displayName, email, password, confirmPassword} = this.state;\n\n    return ( \n      <SignUpContainer>\n          <SignUpTitle>\n            I do not have an account\n          </SignUpTitle>\n          <span>\n            Sign up with your email and password\n          </span>\n          <form className='sign-up-form' onSubmit={this.handleSubmit}>\n            <FormInput \n              type='text'\n              name='displayName'\n              value={displayName}\n              onChange={this.handleChange}\n              label='Display Name'\n              required\n            />\n            <FormInput \n              type='email'\n              name='email'\n              value={email}\n              onChange={this.handleChange}\n              label='Email'\n              required\n            />\n            <FormInput \n              type='password'\n              name='password'\n              value={password}\n              onChange={this.handleChange}\n              label='Password'\n              required\n            />\n            <FormInput \n              type='password'\n              name='confirmPassword'\n              value={confirmPassword}\n              onChange={this.handleChange}\n              label='Confirm Password'\n              required\n            />\n            <CustomButton type='submit'>\n              SIGN UP\n            </CustomButton>\n          </form>\n      </SignUpContainer>\n     );\n  }\n}\n \n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(\n    signUpStart({displayName, email, password})\n  )\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}