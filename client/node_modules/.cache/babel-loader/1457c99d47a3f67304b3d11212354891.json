{"ast":null,"code":"var _jsxFileName = \"/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SingInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials(...userCredentials, {\n      [name]: value\n    });\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(SingInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    label: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(ButtonsBarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    isGoogleSignIn: true,\n    onClick: googleSignInStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SingInTitle","ButtonsBarContainer","SignIn","userCredentials","setCredentials","useState","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP;AAKA,SACEC,eADF,EAEEC,WAFF,EAGEC,mBAHF,QAIO,kBAJP;;AAMA,MAAMC,MAAM,GAAG,CAAC;AAACJ,EAAAA,gBAAD;AAAmBD,EAAAA;AAAnB,CAAD,KAA2C;AACxD,QAAM,CAACM,eAAD,EAAkBC,cAAlB,IAAoCC,QAAQ,CAAC;AACjDC,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,QAAQ,EAAE;AAFuC,GAAD,CAAlD;AAKA,QAAM;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBJ,eAA1B;;AAEA,QAAMK,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAEAZ,IAAAA,gBAAgB,CAACQ,KAAD,EAAQC,QAAR,CAAhB;AACD,GAJD;;AAMA,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC5B,UAAM;AAACG,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgBJ,KAAK,CAACK,MAA5B;AAEAV,IAAAA,cAAc,CAAC,GAAGD,eAAJ,EAAqB;AAAC,OAACU,IAAD,GAASD;AAAV,KAArB,CAAd;AACD,GAJD;;AAOE,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAII;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEF,KAJT;AAKE,IAAA,YAAY,EAAEK,YALhB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEJ,QAJT;AAKE,IAAA,YAAY,EAAEI,YALhB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEH,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAOE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,cAAc,MAFhB;AAGE,IAAA,OAAO,EAAEX,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,CAjBF,CAJJ,CADF;AAyCH,CA9DD;;AAgEA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,iBAAiB,EAAE,MAAMmB,QAAQ,CAACnB,iBAAiB,EAAlB,CADK;AAEtCC,EAAAA,gBAAgB,EAAE,CAACQ,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAC7ClB,gBAAgB,CAAC;AAACQ,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAD6B;AAFT,CAAL,CAAnC;;AAOA,eAAeb,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCb,MAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from '../../redux/user/user.actions';\n\nimport {\n  SignInContainer,\n  SingInTitle,\n  ButtonsBarContainer\n} from './sign-in.styles';\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const {email, password} = userCredentials;\n  \n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  }\n\n  const handleChange = event => {\n    const {value, name} = event.target;\n\n    setCredentials(...userCredentials, {[name] : value})\n  }\n\n\n    return (\n      <SignInContainer>\n          <SingInTitle>I already have an account</SingInTitle>\n          <span>Sign in with your email and password</span>\n\n          <form onSubmit={handleSubmit}>\n            <FormInput \n              label='Email'\n              name='email' \n              type='email' \n              value={email}\n              handleChange={handleChange}\n              required \n            />\n            <FormInput \n              label='Password'\n              name='password' \n              type='password' \n              value={password}\n              handleChange={handleChange}\n              required \n            />\n            <ButtonsBarContainer>\n              <CustomButton \n                type='submit' \n                onClick={handleSubmit}\n              >\n                Sign in\n              </CustomButton>\n              <CustomButton \n                type='button'\n                isGoogleSignIn \n                onClick={googleSignInStart}\n              >\n                Sign in with Google\n              </CustomButton>\n            </ButtonsBarContainer>\n          </form>\n      </SignInContainer>  \n    );\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(\n    emailSignInStart({email, password})\n  )\n});\n \nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}