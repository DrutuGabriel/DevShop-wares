{"ast":null,"code":"var _jsxFileName = \"/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'; // import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component'; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionsOverviewContainer","CollectionPage","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SACEC,0BADF,EAEEC,wBAFF,QAGO,iCAHP;AAKA,OAAOC,WAAP,MAAwB,sDAAxB,C,CAEA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B,C,CAEA;;AACA,MAAMC,yBAAyB,GAAGH,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAME,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACT,MAAAA;AAAD,QAA+B,KAAKU,KAA1C;AACAV,IAAAA,0BAA0B;AAC3B;;AAEDW,EAAAA,MAAM,GAAE;AACN,UAAM;AACJC,MAAAA,KADI;AAEJC,MAAAA,oBAFI;AAGJC,MAAAA;AAHI,QAIF,KAAKJ,KAJT;AAOA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAEX,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAIL,KAAD,IACP,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAE,CAAEI;AADf,SAEMJ,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAiBC;;AAhCkC;;AAoCvC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC/Ce,EAAAA,oBAAoB,EAAGZ,0BADwB;AAE/Ca,EAAAA,kBAAkB,EAAEZ;AAF2B,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {createStructuredSelector} from 'reselect';\nimport {connect} from 'react-redux';\n\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionLoaded\n} from '../../redux/shop/shop.selectors';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\n\nimport CollectionPage from '../collection/collection.component';\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n  componentDidMount(){   \n    const {fetchCollectionsStartAsync} = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render(){\n    const {\n      match, \n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    \n\n    return (\n      <div className='shop-page'>\n        <Route \n          exact \n          path={`${match.path}`} \n          component={CollectionsOverviewContainer}\n        />\n        <Route \n          path={`${match.path}/:collectionId`} \n          render={ (props) => (\n            <CollectionPageWithSpinner \n              isLoading={! isCollectionLoaded} \n              {...props} \n            />\n          )}\n        />\n      </div> \n  );}\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching : selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}