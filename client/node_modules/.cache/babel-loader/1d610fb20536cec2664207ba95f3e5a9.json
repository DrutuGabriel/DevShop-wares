{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","signInSuccess","id","data","error","signInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gBALP;AAOA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAOA,OAAO,UAAUC,gBAAV,GAA4B;AACjC,MAAI;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAArB;AACA,UAAMK,OAAO,GAAI,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA3B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CAACiB,aAAa,CAAC;AACtBC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADK;AAEtB,SAAGH,YAAY,CAACI,IAAb;AAFmB,KAAD,CAAd,CAAT;AAKD,GAVD,CAUE,OAAMC,KAAN,EAAY;AACZ,UAAMpB,GAAG,CAACqB,aAAa,CAACD,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AAC5D,MAAI;AACF,UAAM;AAACb,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACkB,0BAAL,CACnBF,KADmB,EACZC,QADY,CAArB;AAIA,UAAMX,OAAO,GAAI,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA3B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CAACiB,aAAa,CAAC;AACtBC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADK;AAEtB,SAAGH,YAAY,CAACI,IAAb;AAFmB,KAAD,CAAd,CAAT;AAID,GAZD,CAYE,OAAOC,KAAP,EAAa;AACb,UAAMpB,GAAG,CAACqB,aAAa,CAACD,KAAD,CAAd,CAAT;AACD;AACF;AAGD,OAAO,UAAUO,mBAAV,GAA+B;AACpC,QAAM5B,UAAU,CACdI,eAAe,CAACyB,oBADF,EAEdjB,gBAFc,CAAhB;AAID;AAAA;AAED,OAAO,UAAUkB,kBAAV,GAA8B;AACnC,QAAM9B,UAAU,CACdI,eAAe,CAAC2B,mBADF,EAEdR,eAFc,CAAhB;AAID;AAED,OAAO,UAAUS,SAAV,GAAqB;AAC1B,QAAM9B,GAAG,CAAC,CACRC,IAAI,CAACyB,mBAAD,CADI,EAERzB,IAAI,CAAC2B,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport {\n  googleSignInSuccess,\n  googleSignInFailure,\n  emailSignInSuccess,\n  emailSignInFailure\n} from './user.actions';\n\nimport {\n  auth, \n  googleProvider, \n  createUserProfileDocument\n} from '../../firebase/firebase.utils';\n\n\nexport function* signInWithGoogle(){\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    const userRef =  yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n\n  } catch(error){\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({payload: {email, password}}){\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(\n      email, password\n    );    \n    \n    const userRef =  yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error){\n    yield put(signInFailure(error));\n  }\n}\n\n\nexport function* onGoogleSignInStart(){\n  yield takeLatest(\n    UserActionTypes.GOOGLE_SIGN_IN_START, \n    signInWithGoogle\n  );\n};\n\nexport function* onEmailSignInStart(){\n  yield takeLatest(\n    UserActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail\n  );\n}\n\nexport function* userSagas(){\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}