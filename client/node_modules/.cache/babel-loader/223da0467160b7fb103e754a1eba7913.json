{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshop = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshop);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/home/codingvps/Desktop/ReactJS/complete-react/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["all","takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshop","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,UAAb,EAAyBC,IAAzB,EAA+BC,GAA/B,QAAyC,oBAAzC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BG,+BAD+B,EAE/BO,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAMC,KAAN,EAAY;AACZ,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACtC,QAAMhB,UAAU,CACdO,eAAe,CAACU,uBADF,EAEdT,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,SAAV,GAAqB;AAC1B,QAAMnB,GAAG,CAAC,CACRE,IAAI,CAACe,qBAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import {all, takeLatest, call, put} from 'redux-saga/effects';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync(){\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshop = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap, \n      snapshop\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch(error){\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart(){\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas(){\n  yield all([\n    call(fetchCollectionsStart)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}